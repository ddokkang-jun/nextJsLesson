좋아요 버튼 만들기 (useState, onClick)


0:00 이벤트핸들러

3:05 state 문법 

6:50 버튼누르면 +1 기능 만들기 

9:39 그럼 많은거 state로 만들면 좋겠네 





html에 기능을 만들고 싶다





/list 페이지에 있는 상품마다 +1 버튼과 기능을 만들어봅시다. 

버튼 누르면 옆에 있는 숫자가 +1 되어야합니다. 

이런 식의 프론트엔드 UI 기능을 만들고 싶으면

html 클릭시 자바스크립트 같은걸 실행시켜주면 되는데 어떻게 하는지 알아봅시다. 





클릭시 자바스크립트 실행하려면


<button onClick={()=>{ console.log(1) }}>버튼</button>
아무 html 요소에 onClick={()=>{ 자바스크립트~~ }} 넣으면

클릭시 안에 적은 자바스크립트를 실행해줍니다. 

이외에도

onMouseOver 넣으면 마우스커서를 올렸을 때 실행해주고 

onChange 넣으면 input에 뭔가 입력했을 때 실행해주고 

여러가지 핸들러들이 있으니 html에 특정 이벤트가 발생시 자바스크립트 코드실행하고 싶으면 필요할 때 찾아 사용합시다.



Q. 에러나는데요 사기치지마셈 

- 저런 기능은 client component 안에서만 만들 수 있습니다. 






자바스크립트 기능넣으려면 client component


우리가 .jsx 파일에 대충 만든 컴포넌트들은 server component 입니다.

server component는 html안에 자바스크립트 기능을 넣을 수 없게 되어있습니다. 

(html 바깥은 가능)


client component 안에서만 useState, onClick, useEffect 이런 리액트 문법들을 사용가능하고 동적인 효과들을 넣을 수 있습니다. 

그러고 싶으면 .js 파일 맨 위에 'use client' 라고 적어놓읍시다. 




'use client';

export default function List(){
  return (
    (생략)
    <h4 onClick={()=>{ console.log(1) }}>버튼</h4>
  )
}
▲ /list/page.js 파일 맨 위에 'use client' 추가했더니 onClick이 잘 작동합니다. 

버튼눌러서 브라우저 콘솔창에 1 뜨나 확인해보십쇼 





state 문법




▲ 상품마다 주문수량을 옆에 표기해봅시다. 

실제 서비스였으면 매번 페이지 접속마다 좋아요 갯수를 서버에서 가져와서 보여줄텐데 

일단 좋아요 갯수도 서버에서 받아왔다고 가정하고 html에 꽂아넣어봅시다. 


let 수량 = 0;
대충 이렇게 상단에 변수하나 만든 다음에 html에 집어넣으면 성공일 것 같군요.

하지만 리액트에서 이거 말고 다른 식으로 변수 만드는 법이 하나 더 있습니다. 



let [변수이름작명, 함수작명] = useState(변수에넣을값);
이렇게 써도 됩니다. (위에 import {useState} from 'react' 써놔야함)

이런 특별한 변수를 state라고 부릅니다.

state만들 때 왼쪽에 [ ] 안에 작명을 2개 해야하는데

왼쪽은 변수고 오른쪽은 변수변경용 함수인데 오른쪽은 나중에 알아봅시다. 




'use client';
import {useState} from 'react'

export default function List() {
  let [수량, 수량변경] = useState(0)
  return (
    <div>
      <h4 className="title">상품목록</h4>
      { 상품.map(()=>{
        <div className="food" key={i}>
          <img src={`/food${i}.png`} className="food-img"/>
          <h4>{a} $40</h4>
          <span> {수량} </span>
          <button>+</button>
        </div>
      }) }
      
      (생략)
    </div> 
  )
} 

아무튼 state로 변수만들어서 집어넣어도 잘 된다는 소리입니다. 

왜 굳이 귀찮게 state로 만드냐고요?

일반변수는 변경되어도 변수가 들어있는 html에 자동으로 반영되지 않습니다.

반면 state가 변경되면 state가 들어있는 html도 자동으로 재렌더링이 됩니다. 

(재렌더링은 html을 지웠다가 다시 만든다는 소리입니다)


그래서 자주변경되는 데이터들을 자동으로 html 에도 반영되게 하고 싶으면 변수말고 state에 저장해둡시다. 

자주 변경될 일이 없는 것들은 굳이 귀찮게 state 쓸 이유는 없습니다.







state 수정하려면


state 변수들은 그냥 대충 수정하면 재렌더링이 일어나지 않습니다.

state변경함수를 써야 재렌더링이 일어납니다. 

state변경함수는 어딨냐면 state이름 작명할 때 오른쪽에 작명한게 있을텐데 그것임 


let [이름, 이름변경] = useState('kim');
이렇게 이름이라는 state를 만들었는데 갑자기 이름을 'park'으로 변경하고 싶으면 어쩌죠?

그럴 땐 이름변경() 함수를 사용하면 되겠습니다. 

다만 사용법이 특이한데 이름변경() 소괄호 안에 넣은 데이터로 기존 state를 갈아치워줍니다. 



<h4>{이름}</h4>
<button onClick={()=>{ 이름변경('park') }}>버튼</button> 
그래서 버튼누르면 이름을 'park'로 변경하고 싶으면 이렇게 코드짜면 되겠습니다.

진짜 바뀌나 확인해봅시다. 




<span> {수량} </span>
<button>+</button> 
Q. 그래서 아까 html을 위처럼 작성해놨는데 버튼누르면 옆에 있는 수량이 +1 되려면 어떻게 하죠?

필요한 개념은 다 배웠으니 알아서 만들어봅시다. 


보지마쇼





Q. 그럼 state 좋으니까 온갖 내용들을 state로 만들어서 넣으면 좋겠군요?

state쓰면 state 변경시 html도 재렌더링된다는게 장점인데

굳이 변동될 일이 없는 데이터들은 state로 만들 필요는 없습니다. 







오늘의 숙제 : 

+ 버튼 옆에 - 버튼을 만들고 그거 누르면 수량이 -1 되는 기능을 만들어봅시다. 

근데 상품마다 똑같이 수량이 증가하는 문제가 있을 수 있는데 일단 신경쓰지맙시다.  