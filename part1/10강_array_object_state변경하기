좋아요 버튼 만들기 2 (array, object state 변경하려면)


0:00 상품마다 개별적으로 수량을 저장하려면

2:40 상품마다 +1 버튼과 기능 만들기

4:37 array/object state 변경원리

8:54 오늘내용 요약 & 숙제



저번 시간에 상품 1개에만 + 버튼을 만들어놨는데 

이번엔 상품 3개에 전부 만들어봅시다.

각각 상품마다 수량을 기록해둬야하니까 수량 기록할 state도 3개나 필요하지 않을까요? 

그럼 state 3개 부터 만들어놓으면 될 것 같군요.




상품이 3개면 수량 저장할 곳이 3개 필요


근데 useState를 3개나 쓰기는 귀찮고 

자료 여러개를 변수하나에 보관하고 싶으면 array 같은거 쓰면 됩니다. 


export default function List() {
  let 상품 = ['Tomatoes', 'Pasta', 'Coconut'];
  let [수량, 수량변경] = useState([0,0,0]);
  return (
    <div>
      <h4 className="title">상품목록</h4>
      
      <span>{수량[0]}</span>
      <button>+</button>
      <span>{수량[1]}</span>
      <button>+</button>
      <span>{수량[2]}</span>
      <button>+</button>
      (생략)
    </div>
  )
} 

저번에 만든 state를 이렇게 수정하고 html에 집어넣어봤습니다. 

useState() 안에는 문자, 숫자 이런거 말고도 array, object 자료 넣어도 상관없습니다. 


원래 있던 map 반복문 안에 넣으면 사람들 또 이해 어려울까봐

map 바깥에 수량과 + 버튼을 3개 임시로 만들어봤습니다. 







버튼기능을 다시 만들어봅시다


state가 array로 바뀌었는데

그럼 이 경우 수량 +1 되는 버튼 기능은 어떻게 만들어야하죠?

우선 첫째 + 버튼만 기능개발해봅시다. 


export default function List() {
  let 상품 = ['Tomatoes', 'Pasta', 'Coconut'];
  let [수량, 수량변경] = useState([0,0,0]);
  return (
    <div>
      <h4 className="title">상품목록</h4>
      
      <span>{수량[0]}</span>
      <button onClick={()=>{ 
        let copy = [...수량]
        copy[0]++
        수량변경(copy)
      }}>+</button>
      (생략)
    </div>
  )
} 

답부터 보여드리면 이렇게 하면 +1 기능이 완성됩니다. 

- state를 ... 문법으로 복사하고 

- state의 [0]번 항목을 +1 해주고 

- state변경함수() 쓰면 됩니다.



이게 오늘 수업 끝인데

훌륭한 학생들은 왜 굳이 귀찮게 복사부터 해야하는지 궁금해하니까 이유를 알려드리자면  






왜 그런지 궁금하면


리액트의 간단한 동작원리가 하나 있는데 

state변경함수() 를 쓰는 경우 

컴퓨터는 기존state == 신규state 이렇게 먼저 검사해봅니다.

검사해보고 같으면 state 변경을 해주지 않습니다. 

일종의 에너지 절약이라고 생각하면 되겠습니다. 


수량[0]++
수량변경(수량)

▲ 그래서 클릭시 이런 코드 2줄을 실행한다고 기존 state가 변경이 되지 않습니다. 

기존state와 신규state가 같으니까요. 




Q. 뭐임 +1 했는데 왜 같음 

- array, object 자료는 안에 있던 값을 살짝 변경한다고 다른 자료가 되진 않습니다. 






array/object 동작원리 





1. 자바스크립트는 array/object 자료를 하나 만들면

예를 들어서 let arr = [1,2,3] 이렇게 만들면 

[1,2,3] 자료는 RAM이라는 공간에 몰래 저장이 되고

let arr 변수엔 그 자료가 어디있는지 가리키는 화살표만 담겨있습니다.



2. array/object 자료를 수정한다고 해도 

화살표타고 들어가서 RAM에 있던 값이 수정될 뿐

변수에 담긴 화살표는 변하지 않습니다. 

그래서 아까 기존state == 신규state 비교하면 같다고 나오는 것임

(==로 비교하면 변수에 저장된 값인 화살표만 비교해줍니다)



3. 심지어 array/object 자료를 복사해도 화살표만 복사됩니다. 


let arr = [1,2,3]
let arr2 = arr
arr2[0]++
console.log(arr2 == arr)
let arr2 = arr 이렇게 심지어 arr에 있던걸 다른 변수에 복사를 해버려도 

화살표만 복사될 뿐이라 

콘솔창에 arr2 == arr 출력해보면 같다고 나오는군요.

자세한건 javascript reference data type이라고 찾아보면 되겠습니다. 





let copy = 수량
수량[0]++
수량변경(copy)

▲ 그래서 이렇게 복사한다고 해도 

copy와 수량은 각각 화살표가 똑같기 때문에  

state변경함수를 써도 기존state == 신규state라서 state변경을 안해줍니다. 




let copy = [...수량]
수량[0]++
수량변경(copy)

▲ 근데 이렇게 복사하면 잘 동작합니다. 

점3개는 "화살표가 다른 완전한 별개의 array자료"를 만들어서 복사하는 문법이라 그렇습니다. 




저기요 점3개 뭐임


"나는 이해싫고 그냥 사용법만 알려주쇼" 


리액트에서 array/object로 되어있는 state를 수정하고 싶으면 

독립적인 카피본을 만들어서 수정해야합니다. 

[...기존state] 

{...기존state} 

이렇게 하면 독립적인 카피가 하나 생성됩니다.

문자나 숫자로 되어있는 state는 굳이 그럴 필요 없습니다. 





오늘의 숙제 : 

버튼누르면 상품수량이 +1/-1 되는 기능을 완성해옵시다. 

상품 3개 전부 잘 되어야합니다. 